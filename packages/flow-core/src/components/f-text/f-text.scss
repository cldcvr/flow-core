@import "./../../mixins/scss/mixins";

$variants: (
	"heading": (
		"x-large": (
			"fontSize": 24px,
			"lineHeight": 30px
		),
		"large": (
			"fontSize": 20px,
			"lineHeight": 26px
		),
		"medium": (
			"fontSize": 16px,
			"lineHeight": 20px
		),
		"small": (
			"fontSize": 14px,
			"lineHeight": 18px
		),
		"x-small": (
			"fontSize": 12px,
			"lineHeight": 16px
		)
	),
	"para": (
		"large": (
			"fontSize": 16px,
			"lineHeight": 20px
		),
		"medium": (
			"fontSize": 14px,
			"lineHeight": 18px
		),
		"small": (
			"fontSize": 12px,
			"lineHeight": 16px
		),
		"x-small": (
			"fontSize": 10px,
			"lineHeight": 14px
		)
	),
	"code": (
		"large": (
			"fontSize": 16px,
			"lineHeight": 26px
		),
		"medium": (
			"fontSize": 14px,
			"lineHeight": 22px
		),
		"small": (
			"fontSize": 12px,
			"lineHeight": 18px
		),
		"x-small": (
			"fontSize": 10px,
			"lineHeight": 16px
		)
	)
);

$weights: (
	"bold": bold,
	"medium": 500,
	"regular": 400
);

$states: (
	"default": (
		"default": var(--color-text-default),
		"text": var(--color-text-default)
	),
	"secondary": (
		"default": var(--color-text-secondary),
		"text": var(--color-text-secondary)
	),
	"subtle": (
		"default": var(--color-text-subtle),
		"text": var(--color-text-subtle)
	),
	"primary": (
		"default": var(--color-primary-default),
		"text": var(--color-primary-text)
	),
	"success": (
		"default": var(--color-success-default),
		"text": var(--color-success-text)
	),
	"danger": (
		"default": var(--color-danger-default),
		"text": var(--color-danger-text)
	),
	"warning": (
		"default": var(--color-warning-default),
		"text": var(--color-warning-text)
	)
);

$aligns: left, center, right;
f-text {
	@include base();
	&:not([inline]) {
		flex: 1 1;
		display: block;
	}
	&[editable] {
		width: -webkit-fill-available;
	}
	white-space: normal;
	word-break: break-word;
	max-width: 100%;

	@each $variant, $valmap in $variants {
		&[variant="#{$variant}"] {
			@each $size, $sizemap in $valmap {
				&[size="#{$size}"] {
					font-size: map-get($sizemap, "fontSize");
					line-height: map-get($sizemap, "lineHeight");
				}
			}
		}
	}

	@each $weight, $value in $weights {
		&[weight="#{$weight}"] {
			font-weight: $value;
		}
	}
	@each $align in $aligns {
		&[align="#{$align}"] {
			text-align: $align;
			justify-content: $align;
		}
	}

	&[variant="code"] {
		font-family: var(--flow-code-font);
	}
	@each $state, $color in $states {
		&[state="#{$state}"] {
			color: map-get($color, "default");
		}
	}

	&[slot="help"][state="default"] {
		color: var(--color-help-text);
	}

	&[loading] {
		@include shimmer-self();
	}

	&[disabled] {
		@include disabled();
	}
	//   &[editable] {
	//     padding: 8px;
	//     &:hover {
	//       background: var(--color-surface-default-hover);
	//     }
	//     &:focus-visible {
	//       outline: var(--color-primary-default) auto 1px;
	//     }
	//   }
	&[ellipsis] {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	//   &[expandable] {
	//     overflow: hidden;
	//     text-overflow: ellipsis;
	//     display: -webkit-box;
	//     line-clamp: 2;
	//     -webkit-line-clamp: 2;
	//     -webkit-box-orient: vertical;
	//   }
	> a {
		color: var(--color-primary-default);
		text-decoration: none;
	}
}

@each $state, $color in $states {
	f-div[state="#{$state}"] {
		> f-text[state="#{$state}"] {
			color: map-get($color, "text");
		}
	}
}

f-div[direction="column"] {
	> f-text {
		height: fit-content;
		flex: 0 1 auto;
	}
}
f-div[direction="row"] {
	> f-text {
		width: fit-content;
	}
}

:host {
	@include base();
	mark {
		background-color: transparent;
		color: var(--color-highlight-default);
		display: contents;
	}
	.f-text-editable {
		display: flex;
		flex-direction: row;
		width: 100%;
	}
	.pseudo-edit-text {
		display: none;
		position: absolute;
		top: 0;
		right: 0;
	}
	.pseudo-submit-text {
		position: absolute;
		top: 5px;
		right: 6px;
	}
	.non-editable-slot {
		width: 95%;
	}
	.textarea {
		display: block;
		width: 100%;
		overflow: hidden;
		resize: both;
		min-height: 15px;
		// line-height: 20px;
		border: 1px solid var(--color-border-default);
		border-radius: 4px;
		font-family: inherit;
		font-size: inherit;
		padding: 3px 6px;
		resize: none;
		.slot-text {
			width: 95%;
		}

		@each $variant, $valmap in $variants {
			&[variant="#{$variant}"] {
				@each $size, $sizemap in $valmap {
					&[size="#{$size}"] {
						font-size: map-get($sizemap, "fontSize");
						line-height: map-get($sizemap, "lineHeight");
					}
				}
			}
		}

		@each $weight, $value in $weights {
			&[weight="#{$weight}"] {
				font-weight: $value;
			}
		}
		&:focus {
			outline: none;
			border: 1px solid var(--color-primary-default);
		}
	}

	.textarea[contenteditable]:empty::before {
		@include base();
		font-size: 12px;
		content: "Enter Your Text here";
		color: var(--color-text-secondary);
	}
}
